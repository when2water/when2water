version: '2'

services:
  web:
    build: ./w2w.org
    restart: always
    labels:
      traefik.enable: true
      traefik.http.routers.when2water-web.rule: Host(`when2water.org`, `www.when2water.org`)
      traefik.http.routers.when2water-web.tls: true
      traefik.http.routers.when2water-web.middlewares: SecureTLS
    networks:
      - traefik
      - default
  signal:
    build: ./signal
    restart: always
    labels:
      traefik.enable: true
      traefik.http.routers.when2water-signal.rule: Host(`signal.when2water.org`)
      traefik.http.routers.when2water-signal.tls: true
      traefik.http.routers.when2water-signal.middlewares: SecureTLS
    networks:
      - traefik
      - default
  lr:
    build: ./logistic-regression-model
    restart: always
    volumes:
      - weather-data:/data
    environment:
      DATA_LOCATION: /data
      SIGNAL_SERVER: http://signal
    labels:
      traefik.enable: true
      traefik.http.routers.when2water-lr.rule: Host(`lr.when2water.org`, `api.when2water.org`)
      traefik.http.routers.when2water-lr.tls: true
      traefik.http.routers.when2water-lr.middlewares: SecureTLS
    networks:
      - traefik
      - default
  svm:
    build: ./svm-model
    restart: always
    volumes:
      - weather-data:/data
    environment:
      DATA_LOCATION: /data
      SIGNAL_SERVER: http://signal
    labels:
      traefik.enable: true
      traefik.http.routers.when2water-svm.rule: Host(`svm.when2water.org`)
      traefik.http.routers.when2water-svm.tls: true
      traefik.http.routers.when2water-svm.middlewares: SecureTLS
    networks:
      - traefik
      - default
  refresh:
    build: ./data-refresh
    restart: always
    volumes:
      - weather-data:/data
    environment:
      DATA_LOCATION: /data
      API_SERVER: http://lr

volumes:
  weather-data:

networks:
  traefik:
    external: true
